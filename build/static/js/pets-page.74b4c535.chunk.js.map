{"version":3,"sources":["services/pets-api.js","components/PetsList/PetsList.module.css","pages/PetsPage/PetsPage.module.css","components/PetsList/PetsList.js","pages/PetsPage/PetsPage.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchPets","fetchPetWithId","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","axios","defaults","baseURL","get","then","response","data","id","concat","module","exports","petsList","item","image","container","withRouter","_ref","items","match","location","react_default","a","createElement","className","css","map","react_router_dom","to","pathname","path","state","from","key","src","alt","name","PetsPage","_this2","this","petsAPI","setState","components_PetsList_PetsList","Component"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,IAAAM,EAAAN,EAAAO,EAAAF,GAEAG,IAAMC,SAASC,QAAU,wBAElB,IAAMP,EAAY,WACvB,OAAOK,IAAMG,IAAI,SAASC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAGzCV,EAAiB,SAAAW,GAC5B,OAAOP,IAAMG,IAAN,SAAAK,OAAmBD,IAAMH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,4BCR5DG,EAAAC,QAAA,CAAkBC,SAAA,2BAAAC,KAAA,uBAAAC,MAAA,6CCAlBJ,EAAAC,QAAA,CAAkBI,UAAA,gKC2BHC,cAvBE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,MAAOC,EAAjBH,EAAiBG,SAAjB,OACfC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAIb,UAChBM,EAAMQ,IAAI,SAAAb,GAAI,OACbQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,GAAI,CAAEC,SAAQ,GAAApB,OAAKU,EAAMW,KAAX,KAAArB,OAAmBI,EAAKL,IAAMuB,MAAO,CAAEC,KAAMZ,IAC3Da,IAAKpB,EAAKL,GACVgB,UAAWC,IAAIZ,MAEfQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKW,IAAKrB,EAAKC,MAAOqB,IAAKtB,EAAKuB,KAAMZ,UAAWC,IAAIX,QACrDO,EAAAC,EAAAC,cAAA,SAAIV,EAAKuB,gFCVEC,6MACnBN,MAAQ,CACNb,MAAO,uFAGW,IAAAoB,EAAAC,KAClBC,MAAoBnC,KAAK,SAAAa,GAAK,OAAIoB,EAAKG,SAAS,CAAEvB,6CAG3C,IACCA,EAAUqB,KAAKR,MAAfb,MAER,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIV,WAClBM,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACmB,EAAD,CAAUxB,MAAOA,YAfayB","file":"static/js/pets-page.74b4c535.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4042';\n\nexport const fetchPets = () => {\n  return axios.get('/pets').then(response => response.data);\n};\n\nexport const fetchPetWithId = id => {\n  return axios.get(`/pets/${id}`).then(response => response.data);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"petsList\":\"PetsList_petsList__3Ei-J\",\"item\":\"PetsList_item__3UVvq\",\"image\":\"PetsList_image__1V1O_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PetsPage_container__1Tq7m\"};","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './PetsList.module.css';\n\nconst PetsList = ({ items, match, location }) => (\n  <ul className={css.petsList}>\n    {items.map(item => (\n      <Link\n        to={{ pathname: `${match.path}/${item.id}`, state: { from: location } }}\n        key={item.id}\n        className={css.item}\n      >\n        <li>\n          <img src={item.image} alt={item.name} className={css.image} />\n          <p>{item.name}</p>\n        </li>\n      </Link>\n    ))}\n  </ul>\n);\n\nPetsList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  match: PropTypes.shape().isRequired,\n  location: PropTypes.shape().isRequired,\n};\n\nexport default withRouter(PetsList);\n","import React, { Component } from 'react';\nimport PetsList from '../../components/PetsList/PetsList';\nimport * as petsAPI from '../../services/pets-api';\nimport css from './PetsPage.module.css';\n\nexport default class PetsPage extends Component {\n  state = {\n    items: [],\n  };\n\n  componentDidMount() {\n    petsAPI.fetchPets().then(items => this.setState({ items }));\n  }\n\n  render() {\n    const { items } = this.state;\n\n    return (\n      <div className={css.container}>\n        <h2>Available pets</h2>\n        <PetsList items={items} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}